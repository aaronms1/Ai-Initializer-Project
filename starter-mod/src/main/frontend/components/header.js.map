{"version":3,"file":"header.js","sourceRoot":"","sources":["header.tsx"],"names":[],"mappings":";AACA,OAAO,eAAe,CAAC;AACvB,OAAO,mBAAmB,MAAM,wBAAwB,CAAC;AAQzD;;;;;;;;;;GAUG;AACH,MAAM,MAAM,GAA0B,CAAC,EAAE,KAAK,GAAG,QAAQ,EAAE,SAAS,EAAE,QAAQ,EAAuE,EAAe,EAAE;IAClK,MAAM,eAAe,GAAG,UAAU,SAAS,IAAI,EAAE,EAAE,CAAC,CAAC,kCAAkC;IAEvF,OAAO,CACH,kBAAQ,SAAS,EAAE,eAAe,aAC9B,cAAK,SAAS,EAAC,cAAc,YAAE,KAAK,GAAO,EAC3C,KAAC,mBAAmB,IAAC,SAAS,EAAC,gBAAgB,YAAE,QAAQ,GAAuB,IAC3E,CACZ,CAAC;AACN,CAAC,CAAC;AAEF,eAAe,MAAM,CAAC","sourcesContent":["import React, { JSX } from 'react';\nimport './Header.scss';\nimport HorizontalContainer from './horizontal-container';\n\ninterface HeaderProps {\n    title?: string; // Optional title displayed in the header\n    className?: string; // Optional additional CSS classes\n    children?: React.ReactNode; // Add `children` prop explicitly\n}\n\n/**\n * <h1>{@link Header}</h1>\n * Header component that renders a header section for the application.\n *\n * @type {React.FC<HeaderProps>}\n * @param {Object} props - The properties object for the Header component.\n * @param {string} [props.title='Header'] - The title to be displayed in the header. Defaults to \"Header\".\n * @param {string} [props.className] - Additional CSS classes to customize the styling of the header.\n * @param {React.ReactNode} [props.children] - Child elements or components to be rendered inside the header's content area.\n * @returns {JSX.Element} The rendered Header component.\n */\nconst Header: React.FC<HeaderProps> = ({ title = 'Header', className, children }: { title?: string; className?: string; children?: React.ReactNode; }): JSX.Element => {\n    const headerClassName = `header ${className || ''}`; // Combine base and custom classes\n\n    return (\n        <header className={headerClassName }>\n            <div className=\"header-title\">{title}</div>\n            <HorizontalContainer className=\"header-content\">{children}</HorizontalContainer>\n        </header>\n    );\n};\n\nexport default Header;\n"]}