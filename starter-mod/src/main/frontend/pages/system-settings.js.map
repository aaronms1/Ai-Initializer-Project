{"version":3,"file":"system-settings.js","sourceRoot":"","sources":["system-settings.tsx"],"names":[],"mappings":";AAAA,OAAc,EAAE,QAAQ,EAAE,MAAM,OAAO,CAAC;AACxC,OAAO,EAAE,oBAAoB,EAAE,MAAM,mCAAmC,CAAC;AACzE,OAAO,EAAE,qBAAqB,EAAE,MAAM,kCAAkC,CAAC;AACzE,OAAO,EAAE,IAAI,EAAE,MAAM,MAAM,CAAC;AAC5B,OAAO,EAAE,UAAU,EAAE,MAAM,gBAAgB,CAAC;AAC5C,OAAO,MAAM,MAAM,sBAAsB,CAAC;AAC1C,OAAO,EAAE,mBAAmB,EAAE,MAAM,6BAA6B,CAAC;AAClE,OAAO,MAAM,MAAM,cAAc,CAAC;AAElC;;;GAGG;AACH,MAAM,kBAAkB,GAAa,GAAG,EAAE;IACxC,MAAM,CAAC,cAAc,EAAE,iBAAiB,CAAC,GAAG,QAAQ,CAA+B,IAAI,CAAC,CAAC;IAEzF,MAAM,kBAAkB,GAAG,CAAC,QAAa,EAAE,EAAE;QAC3C,iBAAiB,CAAC,QAAQ,CAAC,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;IACtD,CAAC,CAAC;IAEF,MAAM,iBAAiB,GAAG,GAAG,EAAE;QAC7B,IAAI,cAAc,KAAK,IAAI,EAAE,CAAC;YAC5B,mBAAmB,CAAC,IAAI,CAAC,yBAAyB,CAAC,CAAC;YACpD,OAAO;QACT,CAAC;QAED,IAAI,CAAC,oBAAoB,CAAC,SAAS,CAAC,eAAe,CAAC,cAAc,CAAC,CAAC;aACjE,IAAI,CACH,UAAU,CAAC,CAAC,KAAK,EAAE,EAAE;YACnB,mBAAmB,CAAC,IAAI,CAAC,2BAA2B,CAAC,CAAC;YACtD,MAAM,KAAK,CAAC;QACd,CAAC,CAAC,CACH;aACA,SAAS,CAAC,CAAC,cAAc,EAAE,EAAE;YAC5B,OAAO,mBAAmB,CAAC,IAAI,CAAE,cAAyB,CAAC,CAAC;QAC9D,CAAC,CAAC,CAAC;IACP,CAAC,CAAC;IAEF,MAAM,OAAO,GAAG,MAAM,CAAC,MAAM,CAAC,qBAAqB,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;QAClE,KAAK,EAAE,MAAM,CAAC,QAAQ,EAAE;QACxB,KAAK,EAAE,MAAM;KACd,CAAC,CAAC,CAAC;IAEJ,OAAO,CACL,4BACE,mBAAS,SAAS,EAAC,0BAA0B,aAC3C,KAAC,MAAM,IACL,OAAO,EAAE,OAAO,EAChB,QAAQ,EAAE,kBAAkB,GAC5B,EACF,KAAC,MAAM,IAAC,OAAO,EAAE,iBAAiB,iCAEzB,IACD,GACT,CACJ,CAAC;AACJ,CAAC,CAAC;AAEF,eAAe,kBAAkB,CAAC","sourcesContent":["import React, { useState } from 'react';\nimport { SystemSettingsBridge } from '../bridges/system-settings-bridge';\nimport { SystemSettingsOptions } from '../enums/system-settings-options';\nimport { from } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport Button from '../components/button';\nimport { NotificationService } from '../components/notifications';\nimport Select from 'react-select';\n\n/**\n * <h1>{@link SystemSettingsView}</h1>\n * @constructor\n */\nconst SystemSettingsView: React.FC = () => {\n  const [selectedOption, setSelectedOption] = useState<SystemSettingsOptions | null>(null);\n\n  const handleOptionChange = (selected: any) => {\n    setSelectedOption(selected ? selected.value : null);\n  };\n\n  const handleButtonClick = () => {\n    if (selectedOption === null) {\n      NotificationService.show('Please select an option');\n      return;\n    }\n\n    from(SystemSettingsBridge.arguments.processSettings(selectedOption))\n      .pipe(\n        catchError((error) => {\n          NotificationService.show('Error processing settings');\n          throw error;\n        })\n      )\n      .subscribe((serverResponse) => {\n        return NotificationService.show((serverResponse as string));\n      });\n  };\n\n  const options = Object.values(SystemSettingsOptions).map(option => ({\n    label: option.toString(),\n    value: option\n  }));\n\n  return (\n    <>\n      <section className=\"flex p-m gap-m items-end\">\n        <Select\n          options={options}\n          onChange={handleOptionChange}\n        />\n        <Button onClick={handleButtonClick}>\n          Process Settings\n        </Button>\n      </section>\n    </>\n  );\n};\n\nexport default SystemSettingsView;\n"]}