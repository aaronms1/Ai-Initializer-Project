{"version":3,"file":"model-settings.js","sourceRoot":"","sources":["model-settings.tsx"],"names":[],"mappings":";AAAA,OAAc,EAAE,QAAQ,EAAE,MAAM,OAAO,CAAC;AACxC,OAAO,MAAM,MAAM,sBAAsB,CAAC;AAC1C,OAAO,EAAE,YAAY,EAAE,MAAM,0BAA0B,CAAC;AACxD,OAAO,EAAE,YAAY,EAAE,MAAM,wBAAwB,CAAC;AACtD,OAAO,EAAE,cAAc,EAAE,MAAM,MAAM,CAAC;AACtC,OAAO,EAAE,mBAAmB,EAAE,MAAM,6BAA6B,CAAC;AAClE,OAAO,SAAS,MAAM,0BAA0B,CAAC;AAEjD,MAAM,iBAAiB,GAAa,GAAG,EAAE;IACvC,MAAM,CAAC,IAAI,EAAE,OAAO,CAAC,GAAG,QAAQ,CAAC,EAAE,CAAC,CAAC;IAErC,MAAM,iBAAiB,GAAG,CAAC,CAAsC,EAAE,EAAE;QACnE,OAAO,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;IAC1B,CAAC,CAAC;IAEF,MAAM,iBAAiB,GAAG,KAAK,IAAI,EAAE;QACnC,IAAI,CAAC;YACH,MAAM,QAAQ,GAAG,MAAM,cAAc,CAAC,YAAY,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC,CAAC;YAC3E,mBAAmB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QACrC,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACf,OAAO,CAAC,KAAK,CAAC,kCAAkC,EAAE,KAAK,CAAC,CAAC;YACzD,mBAAmB,CAAC,IAAI,CAAC,oDAAoD,EAAE,OAAO,CAAC,CAAC;QAC1F,CAAC;IACH,CAAC,CAAC;IAEF,OAAO,CACL,4BACE,mBAAS,SAAS,EAAC,0BAA0B,aAC3C,KAAC,SAAS,IACR,KAAK,EAAC,WAAW,EACjB,KAAK,EAAE,IAAI,EACX,cAAc,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,iBAAiB,CAAC,CAAQ,CAAC,GAClD,EACF,KAAC,MAAM,IAAC,OAAO,EAAE,iBAAiB,0BAEzB,IACD,GACT,CACJ,CAAC;AACJ,CAAC,CAAC;AACF;;GAEG;AACH,eAAe,iBAAiB,CAAC","sourcesContent":["import React, { useState } from 'react';\nimport Button from '../components/button';\nimport { ModelsBridge } from '../bridges/models-bridge';\nimport { ModelActions } from '../enums/model-actions';\nimport { firstValueFrom } from 'rxjs';\nimport { NotificationService } from '../components/notifications';\nimport InputArea from '../components/input-area';\n\nconst ModelSettingsView: React.FC = () => {\n  const [name, setName] = useState('');\n\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setName(e.target.value);\n  };\n\n  const handleButtonClick = async () => {\n    try {\n      const response = await firstValueFrom(ModelsBridge(ModelActions.SETTINGS));\n      NotificationService.show(response);\n    } catch (error) {\n      console.error('Error processing model settings:', error);\n      NotificationService.show('Error processing model settings. Please try again.', 'error');\n    }\n  };\n\n  return (\n    <>\n      <section className=\"flex p-m gap-m items-end\">\n        <InputArea\n          label=\"Your name\"\n          value={name}\n          onValueChanged={(e) => handleInputChange(e as any)}\n        />\n        <Button onClick={handleButtonClick}>\n          Say hello\n        </Button>\n      </section>\n    </>\n  );\n};\n/**\n * <h1>{@link ModelSettingsView}</h1>\n */\nexport default ModelSettingsView;\n"]}