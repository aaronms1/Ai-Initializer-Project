{"version":3,"file":"servers-bridge.js","sourceRoot":"","sources":["servers-bridge.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,IAAI,EAAc,MAAM,MAAM,CAAC;AACxC,OAAO,EAAE,GAAG,EAAE,MAAM,gBAAgB,CAAC;AACrC,OAAO,MAAM,MAAM,sBAAsB,CAAC;AAI1C,MAAM,OAAO,GAAG,iBAAiB,CAAC;AAElC;;GAEG;AACH,MAAM,CAAC,MAAM,aAAa,GAAG,CAAC,IAAiB,EAAE,MAAqB,EAAmB,EAAE;IACzF,OAAO,IAAI,CACT,MAAM,CAAC,IAAI,CAAC,OAAO,EAAE,eAAe,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC,CACxD,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC;AACpC,CAAC,CAAC","sourcesContent":["import { from, Observable } from \"rxjs\";\nimport { map } from \"rxjs/operators\";\nimport client from \"./connection-factory\";\nimport { ServerTypes } from \"../enums/server-types\";\nimport { ServerActions } from \"../enums/server-actions\";\n\nconst SERVICE = \"servers-service\";\n\n/**\n * <h1>{@link ServersBridge}</h1>\n */\nexport const ServersBridge = (type: ServerTypes, action: ServerActions): Observable<any> => {\n  return from(\n    client.call(SERVICE, \"processServer\", { type, action })\n  ).pipe(map(response => response));\n};\n"]}