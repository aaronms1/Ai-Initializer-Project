{"version":3,"file":"metrics-bridge.js","sourceRoot":"","sources":["metrics-bridge.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,IAAI,EAAc,MAAM,MAAM,CAAC;AACxC,OAAO,EAAE,GAAG,EAAE,MAAM,gBAAgB,CAAC;AACrC,OAAO,MAAM,MAAM,sBAAsB,CAAC;AAG1C,MAAM,OAAO,GAAG,iBAAiB,CAAC,CAAC,+BAA+B;AAElE;;GAEG;AACH,MAAM,CAAC,MAAM,aAAa,GAAG,CAAC,MAAoB,EAAmB,EAAE;IACrE,OAAO,IAAI,CACT,MAAM,CAAC,IAAI,CACT,OAAO,EACP,gBAAgB,EAChB,EAAE,MAAM,EAAE,CAAC,CACd,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC;AACpC,CAAC,CAAC","sourcesContent":["import { from, Observable } from \"rxjs\";\nimport { map } from \"rxjs/operators\";\nimport client from \"./connection-factory\";\nimport { MetricsTypes } from '../enums/metrics-types';\n\nconst SERVICE = \"metrics-service\"; // Name from @Bridge annotation\n\n/**\n * <h1>{@link MetricsBridge}</h1>\n */\nexport const MetricsBridge = (action: MetricsTypes): Observable<any> => {\n  return from(\n    client.call(\n      SERVICE,\n      \"processMetrics\",\n      { action })\n  ).pipe(map(response => response));\n};\n"]}