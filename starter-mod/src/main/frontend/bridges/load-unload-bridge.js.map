{"version":3,"file":"load-unload-bridge.js","sourceRoot":"","sources":["load-unload-bridge.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,IAAI,EAAc,MAAM,MAAM,CAAC;AACxC,OAAO,EAAE,GAAG,EAAE,MAAM,gBAAgB,CAAC;AACrC,OAAO,MAAM,MAAM,sBAAsB,CAAC;AAE1C,MAAM,OAAO,GAAG,qBAAqB,CAAC;AAEtC;;;;GAIG;AACH,MAAM,CAAC,MAAM,gBAAgB,GAAG,CAAC,MAAuB,EAAmB,EAAE;IAC3E,OAAO,IAAI,CACT,MAAM,CAAC,IAAI,CAAC,OAAO,EAAE,UAAU,EAAE,EAAE,MAAM,EAAE,CAAC,CAC7C,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC;AACpC,CAAC,CAAC","sourcesContent":["import { DownloadActions } from '../enums/download-actions';\nimport { from, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport client from './connection-factory';\n\nconst SERVICE = \"downloaders-service\";\n\n/**\n * <h1>{@link LoadUnloadBridge}</h1>\n * @param action\n * @constructor\n */\nexport const LoadUnloadBridge = (action: DownloadActions): Observable<any> => {\n  return from(\n    client.call(SERVICE, \"download\", { action })\n  ).pipe(map(response => response));\n};\n"]}