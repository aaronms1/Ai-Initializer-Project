{"version":3,"file":"directories-files.js","sourceRoot":"","sources":["directories-files.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,IAAI,EAAc,MAAM,MAAM,CAAC;AACxC,OAAO,EAAE,GAAG,EAAE,MAAM,gBAAgB,CAAC;AACrC,OAAO,MAAM,MAAM,sBAAsB,CAAC;AAG1C,MAAM,OAAO,GAAG,kBAAkB,CAAC;AAEnC;;GAEG;AACH,MAAM,CAAC,MAAM,sBAAsB,GAAG,CAAC,MAAwB,EAAE,IAAY,EAAE,QAAgB,EAAmB,EAAE;IAClH,OAAO,IAAI,CACT,MAAM,CAAC,IAAI,CAAC,OAAO,EAAE,gBAAgB,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,QAAQ,EAAE,CAAC,CACnE,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC;AACpC,CAAC,CAAC","sourcesContent":["import { from, Observable } from \"rxjs\";\nimport { map } from \"rxjs/operators\";\nimport client from \"./connection-factory\";\nimport { DirectoryActions } from \"../enums/directory-actions\";\n\nconst SERVICE = \"dir-file-service\";\n\n/**\n * <h1>{@link DirectoriesFilesBridge}</h1>\n */\nexport const DirectoriesFilesBridge = (action: DirectoryActions, path: string, fileName: string): Observable<any> => {\n  return from(\n    client.call(SERVICE, \"processDirFile\", { action, path, fileName })\n  ).pipe(map(response => response));\n};\n"]}