{"version":3,"file":"servers.js","sourceRoot":"","sources":["servers.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { ViewConfig } from '@vaadin/hilla-file-router/types.js';\nimport { Button, Dialog, Notification } from '@vaadin/react-components';\n// @ts-ignore\nimport { ServersService } from 'Frontend/generated/endpoints';\n\nexport const config: ViewConfig = {\n  menu: { order: 13, icon: 'line-awesome/svg/server-solid.svg' , title: 'Servers' }};\n\nconst ManageServersView: React.FC = () => {\n  const [dialogOpened, setDialogOpened] = useState(false);\n  const [dialogMessage, setDialogMessage] = useState('');\n  const [dialogAction, setDialogAction] = useState<() => void>(() => {});\n\n  const openDialog = (message: string, action: () => void) => {\n    setDialogMessage(message);\n    setDialogAction(() => action);\n    setDialogOpened(true);\n  };\n\n  const handleDialogClose = () => {\n    setDialogOpened(false);\n  };\n\n  const startServer = async () => {\n    const result = await ServersService.manageServer('start');\n    Notification.show(\"Started server\" + result);\n  };\n\n  const stopServer = async () => {\n    const result = await ServersService.manageServer('stop');\n    Notification.show(\"Server stopped\" + result);\n  };\n\n  const restartServer = async () => {\n    const result = await ServersService.manageServer('restart');\n    Notification.show(\"Restarted server\" + result);\n  };\n\n  return (\n    <>\n      <section className=\"flex p-m gap-m items-end\">\n        <Button\n          onClick={() => openDialog('Are you sure you want to start the server?', startServer)}\n          style={{ backgroundColor: 'green' }}>Start Server</Button>\n        <Button\n          onClick={() => openDialog('Are you sure you want to stop the server?', stopServer)}\n          style={{ backgroundColor: 'red' }}>Stop Server</Button>\n        <Button\n          onClick={() => openDialog('Are you sure you want to restart the server?', restartServer)}\n          style={{ backgroundColor: 'blue' }}>Restart Server</Button>\n      </section>\n      <Dialog opened={dialogOpened}\n              onOpenedChanged={(e) => setDialogOpened(e.detail.value)}>\n        <div>\n          <p>{dialogMessage}</p>\n          <div className=\"flex gap-s\">\n            <Button theme=\"primary\" onClick={() => {\n              dialogAction();\n              handleDialogClose();\n            }}>\n              Yes\n            </Button>\n            <Button theme=\"secondary\" onClick={handleDialogClose}>\n              No\n            </Button>\n          </div>\n        </div>\n      </Dialog>\n    </>\n  );\n};\n\nexport default ManageServersView;\n"]}