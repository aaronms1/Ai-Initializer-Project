{"version":3,"file":"metrics.js","sourceRoot":"","sources":["metrics.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Notification } from '@vaadin/notification';\nimport { MetricsService } from 'Frontend/generated/endpoints';\nimport { ViewConfig } from '@vaadin/hilla-file-router/types.js';\nimport GpuGauge from './components/gpu-gauge';\nimport CpuGauge from './components/cpu-gauge';\nimport MemoryGauge from './components/memory-gauge';\nimport DiskGauge from './components/disk-gauge';\nimport NetworkGauge from './components/network-gauge';\n\nexport const config: ViewConfig = {\n  menu: { order: 7, icon: 'line-awesome/svg/chart-line-solid.svg', title: 'Metrics' },\n};\n\ninterface MetricsViewState {\n  gpu: number;\n  cpu: number;\n  memory: number;\n  disk: number;\n  network: number;\n  showGpu: boolean;\n  showCpu: boolean;\n  showMemory: boolean;\n  showDisk: boolean;\n  showNetwork: boolean;\n}\n\n/**\n * <h1>{@link MetricsView}</h1>\n */\nclass MetricsView extends Component<{}, MetricsViewState> {\n  constructor(props: {}) {\n    super(props);\n    this.state = {\n      gpu: 0,\n      cpu: 0,\n      memory: 0,\n      disk: 0,\n      network: 0,\n      showGpu: true,\n      showCpu: true,\n      showMemory: true,\n      showDisk: true,\n      showNetwork: true,\n    };\n  }\n\n  subscribeToGpu = () => {\n    MetricsService.measure('gpu')\n      .then(() => {\n        Notification.show('GPU metric subscribed successfully');\n        this.setState({ showGpu: true });\n      });\n  };\n\n  subscribeToCpu = () => {\n    MetricsService.measure('cpu')\n      .then(() => {\n        Notification.show('CPU metric subscribed successfully');\n        this.setState({ showCpu: true });\n      });\n  };\n\n  subscribeToMemory = () => {\n    MetricsService.measure('memory')\n      .then(() => {\n        Notification.show('Memory metric subscribed successfully');\n        this.setState({ showMemory: true });\n      });\n  };\n\n  subscribeToDisk = () => {\n    MetricsService.measure('disk')\n      .then(() => {\n        Notification.show('Disk metric subscribed successfully');\n        this.setState({ showDisk: true });\n      });\n  };\n\n  subscribeToNetwork = () => {\n    MetricsService.measure('network')\n      .then(() => {\n        Notification.show('Network metric subscribed successfully');\n        this.setState({ showNetwork: true });\n      });\n  };\n\n  subscribeToAllMetrics = () => {\n    this.subscribeToGpu();\n    this.subscribeToCpu();\n    this.subscribeToMemory();\n    this.subscribeToDisk();\n    this.subscribeToNetwork();\n  };\n\n  render() {\n    const { gpu, cpu, memory, disk, network, showGpu, showCpu, showMemory, showDisk, showNetwork } = this.state;\n\n    return (\n      <div className=\"flex flex-col h-full items-center justify-center p-l text-center box-border\">\n        <h1>Server Metrics</h1>\n        <button onClick={this.subscribeToGpu}>Subscribe to GPU</button>\n        <button onClick={this.subscribeToCpu}>Subscribe to CPU</button>\n        <button onClick={this.subscribeToMemory}>Subscribe to Memory</button>\n        <button onClick={this.subscribeToDisk}>Subscribe to Disk</button>\n        <button onClick={this.subscribeToNetwork}>Subscribe to Network</button>\n        <button onClick={this.subscribeToAllMetrics}>Subscribe to All Metrics</button>\n        {showGpu && (\n          <div>\n            <button onClick={() => this.setState({ showGpu: false })}>x</button>\n            <GpuGauge value={gpu} />\n          </div>\n        )}\n        {showCpu && (\n          <div>\n            <button onClick={() => this.setState({ showCpu: false })}>x</button>\n            <CpuGauge value={cpu} />\n          </div>\n        )}\n        {showMemory && (\n          <div>\n            <button onClick={() => this.setState({ showMemory: false })}>x</button>\n            <MemoryGauge value={memory} />\n          </div>\n        )}\n        {showDisk && (\n          <div>\n            <button onClick={() => this.setState({ showDisk: false })}>x</button>\n            <DiskGauge value={disk} />\n          </div>\n        )}\n        {showNetwork && (\n          <div>\n            <button onClick={() => this.setState({ showNetwork: false })}>x</button>\n            <NetworkGauge value={network} />\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default MetricsView;\n"]}