{"version":3,"file":"model-settings.js","sourceRoot":"","sources":["model-settings.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,EAAE,EAAE,SAAS,EAAE,MAAM,OAAO,CAAC;AAEzC,OAAO,EAAE,MAAM,EAAE,YAAY,EAAE,SAAS,EAAE,MAAM,0BAA0B,CAAC;AAC3E,OAAO,EAAE,iBAAiB,EAAE,MAAM,iCAAiC,CAAC;AAEpE,MAAM,CAAC,MAAM,MAAM,GAAe;IAChC,IAAI,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,kCAAkC,EAAE;IAC5D,KAAK,EAAE,gBAAgB;CACxB,CAAC;AAMF,MAAM,aAAc,SAAQ,SAAiC;IAC3D,YAAY,KAAS;QACnB,KAAK,CAAC,KAAK,CAAC,CAAC;QAMf,sBAAiB,GAAG,CAAC,CAAsC,EAAE,EAAE;YAC7D,IAAI,CAAC,QAAQ,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC;QAC1C,CAAC,CAAC;QAEF,sBAAiB,GAAG,KAAK,IAAI,EAAE;YAC7B,MAAM,EAAE,IAAI,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC;YAC5B,MAAM,cAAc,GAAG,MAAM,iBAAiB,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;YAC9D,YAAY,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;QACpC,CAAC,CAAC;QAbA,IAAI,CAAC,KAAK,GAAG;YACX,IAAI,EAAE,EAAE;SACT,CAAC;IACJ,CAAC;IAYD,MAAM;QACJ,MAAM,EAAE,IAAI,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC;QAE5B,OAAO,CACL,4BACE,mBAAS,SAAS,EAAC,0BAA0B,aAC3C,KAAC,SAAS,IACR,KAAK,EAAC,WAAW,EACjB,KAAK,EAAE,IAAI,EACX,cAAc,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC,GAChD,EACF,KAAC,MAAM,IAAC,OAAO,EAAE,IAAI,CAAC,iBAAiB,0BAE9B,IACD,GACT,CACJ,CAAC;IACJ,CAAC;CACF;AAED,eAAe,aAAa,CAAC","sourcesContent":["import React, { Component } from 'react';\nimport { ViewConfig } from '@vaadin/hilla-file-router/types.js';\nimport { Button, Notification, TextField } from '@vaadin/react-components';\nimport { HelloWorldService } from 'Frontend/generated/endpoints.js';\n\nexport const config: ViewConfig = {\n  menu: { order: 8, icon: 'line-awesome/svg/robot-solid.svg' },\n  title: 'Model Settings',\n};\n\ninterface ModelSettingsState {\n  name: string;\n}\n\nclass ModelSettings extends Component<{}, ModelSettingsState> {\n  constructor(props: {}) {\n    super(props);\n    this.state = {\n      name: ''\n    };\n  }\n\n  handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ name: e.target.value });\n  };\n\n  handleButtonClick = async () => {\n    const { name } = this.state;\n    const serverResponse = await HelloWorldService.sayHello(name);\n    Notification.show(serverResponse);\n  };\n\n  render() {\n    const { name } = this.state;\n\n    return (\n      <>\n        <section className=\"flex p-m gap-m items-end\">\n          <TextField\n            label=\"Your name\"\n            value={name}\n            onValueChanged={(e) => this.handleInputChange(e)}\n          />\n          <Button onClick={this.handleButtonClick}>\n            Say hello\n          </Button>\n        </section>\n      </>\n    );\n  }\n}\n\nexport default ModelSettings;\n"]}