{"version":3,"file":"main-menubar.js","sourceRoot":"","sources":["main-menubar.tsx"],"names":[],"mappings":";AAAA,OAAO,eAAe,CAAC;AAEvB,OAAO,EAAE,IAAI,EAAE,MAAM,kCAAkC,CAAC;AACxD,OAAO,EAAE,OAAO,EAAE,MAAM,qCAAqC,CAAC;AAE9D,SAAS,UAAU,CAAC,QAAgB,EAAE,IAAY,EAAE,OAAO,GAAG,KAAK;IACjE,MAAM,SAAS,GAAwB;QACrC,KAAK,EAAE,OAAO,CAAC,CAAC,CAAC,yBAAyB,CAAC,CAAC,CAAC,EAAE;QAC/C,MAAM,EAAE,OAAO,CAAC,CAAC,CAAC,yBAAyB,CAAC,CAAC,CAAC,EAAE;QAChD,WAAW,EAAE,OAAO,CAAC,CAAC,CAAC,qBAAqB,CAAC,CAAC,CAAC,EAAE;KAClD,CAAC;IAEF,IAAI,SAAS,GAAG,EAAE,CAAC;IACnB,IAAI,QAAQ,KAAK,MAAM,EAAE,CAAC;QACxB,SAAS,GAAG,WAAW,CAAC;IAC1B,CAAC;IAED,OAAO,CACL,8BACE,KAAC,IAAI,IAAC,IAAI,EAAE,UAAU,QAAQ,EAAE,EAAE,KAAK,EAAE,SAAS,gBAAc,SAAS,GAAI,EAC5E,IAAI,IACJ,CACJ,CAAC;AACJ,CAAC;AAED,MAAM,WAAW,GAAa,GAAG,EAAE;IACjC,MAAM,KAAK,GAAG;QACZ,EAAE,SAAS,EAAE,UAAU,CAAC,KAAK,EAAE,MAAM,CAAC,EAAE;QACxC,EAAE,SAAS,EAAE,UAAU,CAAC,MAAM,EAAE,MAAM,CAAC,EAAE;QACzC;YACE,SAAS,EAAE,UAAU,CAAC,OAAO,EAAE,OAAO,CAAC;YACvC,QAAQ,EAAE;gBACR;oBACE,SAAS,EAAE,UAAU,CAAC,OAAO,EAAE,iBAAiB,EAAE,IAAI,CAAC;oBACvD,QAAQ,EAAE;wBACR,EAAE,SAAS,EAAE,UAAU,CAAC,UAAU,EAAE,UAAU,EAAE,IAAI,CAAC,EAAE;wBACvD,EAAE,SAAS,EAAE,UAAU,CAAC,SAAS,EAAE,SAAS,EAAE,IAAI,CAAC,EAAE;wBACrD,EAAE,SAAS,EAAE,UAAU,CAAC,WAAW,EAAE,WAAW,EAAE,IAAI,CAAC,EAAE;qBAC1D;iBACF;gBACD,EAAE,SAAS,EAAE,UAAU,CAAC,UAAU,EAAE,UAAU,EAAE,IAAI,CAAC,EAAE;gBACvD,EAAE,SAAS,EAAE,UAAU,CAAC,MAAM,EAAE,UAAU,EAAE,IAAI,CAAC,EAAE;aACpD;SACF;QACD;YACE,SAAS,EAAE,UAAU,CAAC,QAAQ,EAAE,MAAM,CAAC;YACvC,QAAQ,EAAE;gBACR,EAAE,SAAS,EAAE,UAAU,CAAC,aAAa,EAAE,WAAW,EAAE,IAAI,CAAC,EAAE;gBAC3D,EAAE,SAAS,EAAE,UAAU,CAAC,OAAO,EAAE,UAAU,EAAE,IAAI,CAAC,EAAE;aACrD;SACF;QACD,EAAE,SAAS,EAAE,UAAU,CAAC,MAAM,EAAE,WAAW,CAAC,EAAE;KAC/C,CAAC;IAEF,OAAO,KAAC,OAAO,IAAC,KAAK,EAAC,MAAM,EAAC,KAAK,EAAE,KAAK,GAAI,CAAC;AAChD,CAAC,CAAC;AAEF,eAAe,WAAW,CAAC","sourcesContent":["import '@vaadin/icons';\nimport React from 'react';\nimport { Icon } from '@vaadin/react-components/Icon.js';\nimport { MenuBar } from '@vaadin/react-components/MenuBar.js';\n\nfunction createItem(iconName: string, text: string, isChild = false) {\n  const iconStyle: React.CSSProperties = {\n    width: isChild ? 'var(--lumo-icon-size-s)' : '',\n    height: isChild ? 'var(--lumo-icon-size-s)' : '',\n    marginRight: isChild ? 'var(--lumo-space-s)' : '',\n  };\n\n  let ariaLabel = '';\n  if (iconName === 'copy') {\n    ariaLabel = 'duplicate';\n  }\n\n  return (\n    <>\n      <Icon icon={`vaadin:${iconName}`} style={iconStyle} aria-label={ariaLabel} />\n      {text}\n    </>\n  );\n}\n\nconst MainMenubar: React.FC = () => {\n  const items = [\n    { component: createItem('eye', 'View') },\n    { component: createItem('edit', 'Edit') },\n    {\n      component: createItem('share', 'Share'),\n      children: [\n        {\n          component: createItem('share', 'On social media', true),\n          children: [\n            { component: createItem('facebook', 'Facebook', true) },\n            { component: createItem('twitter', 'Twitter', true) },\n            { component: createItem('instagram', 'Instagram', true) },\n          ],\n        },\n        { component: createItem('envelope', 'By email', true) },\n        { component: createItem('link', 'Get link', true) },\n      ],\n    },\n    {\n      component: createItem('folder', 'Move'),\n      children: [\n        { component: createItem('folder-open', 'To folder', true) },\n        { component: createItem('trash', 'To trash', true) },\n      ],\n    },\n    { component: createItem('copy', 'Duplicate') },\n  ];\n\n  return <MenuBar theme=\"icon\" items={items} />;\n};\n\nexport default MainMenubar;\n"]}