{"version":3,"file":"load-unload.js","sourceRoot":"","sources":["load-unload.tsx"],"names":[],"mappings":";AAAA,OAAc,EAAE,QAAQ,EAAE,MAAM,OAAO,CAAC;AACxC,OAAO,EAAE,YAAY,EAAE,MAAM,sBAAsB,CAAC;AACpD,aAAa;AACb,OAAO,EAAE,iBAAiB,EAAE,MAAM,8BAA8B,CAAC;AAGjE,MAAM,CAAC,MAAM,MAAM,GAAe;IAChC,IAAI,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,mCAAmC,EAAE;IAC7D,KAAK,EAAE,eAAe;CACvB,CAAC;AAEF,MAAM,cAAc,GAAa,GAAG,EAAE;IACpC,MAAM,CAAC,SAAS,EAAE,YAAY,CAAC,GAAG,QAAQ,CAAoB,IAAI,CAAC,CAAC;IAEpE,MAAM,SAAS,GAAG,KAAK,EAAE,SAAiB,EAAE,EAAE;QAC5C,MAAM,SAAS,GAAG,IAAI,UAAU,EAAE,CAAC;QACnC,MAAM,iBAAiB,CAAC,aAAa,CAAC,MAAM,EAAE,SAAS,EAAE,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;QAChF,YAAY,CAAC,IAAI,CAAC,2BAA2B,CAAC,CAAC;QAC/C,YAAY,CAAC,SAAS,CAAC,CAAC;IAC1B,CAAC,CAAC;IAEF,MAAM,WAAW,GAAG,KAAK,IAAI,EAAE;QAC7B,MAAM,SAAS,GAAG,IAAI,UAAU,EAAE,CAAC;QACnC,MAAM,iBAAiB,CAAC,aAAa,CAAC,QAAQ,EAAE,EAAE,EAAE,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;QAC3E,YAAY,CAAC,IAAI,CAAC,6BAA6B,CAAC,CAAC;QACjD,YAAY,CAAC,IAAI,CAAC,CAAC;IACrB,CAAC,CAAC;IAEF,OAAO,CACL,0BACE,iBAAQ,OAAO,EAAE,GAAG,EAAE,CAAC,SAAS,CAAC,eAAe,CAAC,2BAAqB,EACtE,iBAAQ,OAAO,EAAE,WAAW,EAAE,QAAQ,EAAE,CAAC,SAAS,6BAAuB,IACrE,CACP,CAAC;AACJ,CAAC,CAAC;AAEF,eAAe,cAAc,CAAC","sourcesContent":["import React, { useState } from 'react';\nimport { Notification } from '@vaadin/notification';\n// @ts-ignore\nimport { LoadUnloadService } from 'Frontend/generated/endpoints';\nimport { ViewConfig } from '@vaadin/hilla-file-router/types.js';\n\nexport const config: ViewConfig = {\n  menu: { order: 5, icon: 'line-awesome/svg/upload-solid.svg' },\n  title: 'Load ~ Unload',\n};\n\nconst LoadUnloadView: React.FC = () => {\n  const [modelData, setModelData] = useState<Uint8Array | null>(null);\n\n  const loadModel = async (modelPath: string) => {\n    const modelData = new Uint8Array();\n    await LoadUnloadService.loadUnloadLLM(\"load\", modelPath, Array.from(modelData));\n    Notification.show('Model loaded successfully');\n    setModelData(modelData);\n  };\n\n  const unloadModel = async () => {\n    const modelData = new Uint8Array();\n    await LoadUnloadService.loadUnloadLLM(\"unload\", \"\", Array.from(modelData));\n    Notification.show('Model unloaded successfully');\n    setModelData(null);\n  };\n\n  return (\n    <div>\n      <button onClick={() => loadModel('path/to/model')}>Load Model</button>\n      <button onClick={unloadModel} disabled={!modelData}>Unload Model</button>\n    </div>\n  );\n};\n\nexport default LoadUnloadView;\n"]}