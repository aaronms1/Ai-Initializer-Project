{"version":3,"file":"system-settings.js","sourceRoot":"","sources":["system-settings.tsx"],"names":[],"mappings":";AAAA,OAAc,EAAE,QAAQ,EAAE,MAAM,OAAO,CAAC;AAExC,OAAO,EAAE,MAAM,EAAE,YAAY,EAAE,MAAM,EAAE,MAAM,0BAA0B,CAAC;AACxE,OAAO,EAAE,cAAc,EAAE,MAAM,wCAAwC,CAAC;AACxE,OAAO,EAAE,qBAAqB,EAAE,MAAM,sCAAsC,CAAC;AAE7E,MAAM,CAAC,MAAM,MAAM,GAAe;IAChC,IAAI,EAAE,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,gCAAgC,EAAE;IAC3D,KAAK,EAAE,iBAAiB;CACzB,CAAC;AAEF,MAAM,kBAAkB,GAAa,GAAG,EAAE;IACxC,MAAM,CAAC,cAAc,EAAE,iBAAiB,CAAC,GAAG,QAAQ,CAAoC,SAAS,CAAC,CAAC;IAEnG,MAAM,kBAAkB,GAAG,CAAC,CAAc,EAAE,EAAE;QAC5C,iBAAiB,CAAC,CAAC,CAAC,MAAM,CAAC,KAA8B,CAAC,CAAC;IAC7D,CAAC,CAAC;IAEF,MAAM,iBAAiB,GAAG,KAAK,IAAI,EAAE;QACnC,IAAI,cAAc,KAAK,SAAS,EAAE,CAAC;YACjC,YAAY,CAAC,IAAI,CAAC,yBAAyB,CAAC,CAAC;YAC7C,OAAO;QACT,CAAC;QAED,IAAI,CAAC;YACH,MAAM,cAAc,GAAG,MAAM,cAAc,CAAC,eAAe,CAAC,cAAc,CAAC,CAAC;YAC5E,YAAY,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;QACpC,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACf,YAAY,CAAC,IAAI,CAAC,2BAA2B,CAAC,CAAC;QACjD,CAAC;IACH,CAAC,CAAC;IAEF,OAAO,CACL,4BACE,mBAAS,SAAS,EAAC,0BAA0B,aAC3C,KAAC,MAAM,IACL,KAAK,EAAC,eAAe,EACrB,KAAK,EAAE,MAAM,CAAC,MAAM,CAAC,qBAAqB,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,EAAE,KAAK,EAAE,MAAM,CAAC,QAAQ,EAAE,EAAE,KAAK,EAAE,MAAM,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC,EACnH,cAAc,EAAE,kBAAkB,GAClC,EACF,KAAC,MAAM,IAAC,OAAO,EAAE,iBAAiB,iCAEzB,IACD,GACT,CACJ,CAAC;AACJ,CAAC,CAAC;AAEF,eAAe,kBAAkB,CAAC","sourcesContent":["import React, { useState } from 'react';\nimport { ViewConfig } from '@vaadin/hilla-file-router/types.js';\nimport { Button, Notification, Select } from '@vaadin/react-components';\nimport { SystemSettings } from 'Frontend/views/settings/SystemSettings';\nimport { SystemSettingsOptions } from 'Frontend/enums/SystemSettingsOptions';\n\nexport const config: ViewConfig = {\n  menu: { order: 15, icon: 'line-awesome/svg/cog-solid.svg' },\n  title: 'System Settings'\n};\n\nconst SystemSettingsView: React.FC = () => {\n  const [selectedOption, setSelectedOption] = useState<SystemSettingsOptions | undefined>(undefined);\n\n  const handleOptionChange = (e: CustomEvent) => {\n    setSelectedOption(e.detail.value as SystemSettingsOptions);\n  };\n\n  const handleButtonClick = async () => {\n    if (selectedOption === undefined) {\n      Notification.show('Please select an option');\n      return;\n    }\n\n    try {\n      const serverResponse = await SystemSettings.processSettings(selectedOption);\n      Notification.show(serverResponse);\n    } catch (error) {\n      Notification.show('Error processing settings');\n    }\n  };\n\n  return (\n    <>\n      <section className=\"flex p-m gap-m items-end\">\n        <Select\n          label=\"Select Option\"\n          items={Object.values(SystemSettingsOptions).map(option => ({ label: option.toString(), value: option.toString() }))}\n          onValueChanged={handleOptionChange}\n        />\n        <Button onClick={handleButtonClick}>\n          Process Settings\n        </Button>\n      </section>\n    </>\n  );\n};\n\nexport default SystemSettingsView;\n"]}